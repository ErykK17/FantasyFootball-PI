# Generated by Django 3.2.8 on 2023-01-22 15:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('friends', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Footballer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('position', models.CharField(choices=[('GK', 'Bramkarz'), ('DF', 'Obrońca'), ('MF', 'Pomocnik'), ('FW', 'Napastnik')], max_length=30, null=True)),
                ('points', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FootballersAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Matchday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='MatchdayX', max_length=30)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MatchEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=30, null=True)),
                ('points_granted', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyFootballer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('squad_role', models.CharField(choices=[('FS', 'Pierwszy skład'), ('SUBB', 'Rezerwowy bramkarz'), ('SUB1', 'Pierwszy rezerwowy'), ('SUB2', 'Drugi rezerwowy'), ('SUB3', 'Trzeci rezerwowy')], max_length=30, null=True)),
                ('footballer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.footballer')),
                ('matchday', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.matchday')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('logo', models.ImageField(blank=True, default='/media/ball.jpg', upload_to='', verbose_name='logo')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.IntegerField(null=True)),
                ('matchday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.matchday')),
                ('player_in', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.footballer')),
                ('player_out', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.myfootballer')),
            ],
        ),
        migrations.CreateModel(
            name='PowerUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_used', models.BooleanField(default=False, null=True)),
                ('powerup_type', models.CharField(choices=[('TC', 'Potrójny kapitan'), ('WC', 'Dzika karta'), ('SC', 'Super Rezerwowi')], max_length=30, null=True)),
                ('matchday', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.matchday')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HomeGoals', models.IntegerField(default=0, null=True)),
                ('AwayGoals', models.IntegerField(default=0, null=True)),
                ('AwayTeam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away', to='backend.team')),
                ('HomeTeam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home', to='backend.team')),
                ('Matchday', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.matchday')),
                ('event', models.ManyToManyField(blank=True, to='backend.FootballersAction')),
            ],
        ),
        migrations.CreateModel(
            name='FriendsRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inviting_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inviting', to=settings.AUTH_USER_MODEL)),
                ('recieving_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recieving', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='footballersaction',
            name='event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.matchevent'),
        ),
        migrations.AddField(
            model_name='footballersaction',
            name='footballer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.footballer'),
        ),
        migrations.AddField(
            model_name='footballer',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='footballers', to='backend.team'),
        ),
    ]
